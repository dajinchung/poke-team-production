{"ast":null,"code":"import axios from 'axios';\nimport apiHelpers from './apiHelpers';\nconst PokeAPI = {};\nconst BASE_URL = \"https://pokeapi.co/api/v2/\";\nconst DJANGO_URL = \"http://localhost:8000/poke_team/\";\nconst TEAM_URL = \"https://random-word-form.herokuapp.com/\"; // const tryCatchFetch = async (axiosCall) => {\n//   try{\n//     const response = await axiosCall() //returns promise (tell us if we succeeded or failed), wait for promise to resolve\n//     return response.data\n//   }\n//   catch (e){\n//     console.error(\"tryCatchFetch LOOKIE LOOKIE:\", e)\n//     return null\n//   }\n// }\n//helper function, passing in a function 'axiosCall()'\n//authentication api methods\n\nPokeAPI.login = async loginData => {\n  return await apiHelpers.tryCatchFetch(() => axios.post(`${DJANGO_URL}login/`, loginData, apiHelpers.getCsrfConfig()));\n};\n\nPokeAPI.logout = async () => {\n  return await apiHelpers.tryCatchFetch(() => axios.post(`${DJANGO_URL}logout/`, null, apiHelpers.getCsrfConfig()));\n};\n\nPokeAPI.signUp = async signUpData => {\n  return await apiHelpers.tryCatchFetch(() => axios.post(`${DJANGO_URL}users/`, signUpData, apiHelpers.getCsrfConfig()));\n}; // pokemon api methods\n\n\nPokeAPI.getAllPokemon = async () => {\n  const allPokemon = await axios.get(`${BASE_URL}pokemon?limit=10&offset=0`, apiHelpers.getCsrfConfig());\n  let pokemonData = [];\n\n  for (let pokemon of allPokemon.data.results) {\n    let pokemonObject = {};\n    const detailedPokemon = await axios.get(pokemon.url);\n    const namePokemon = detailedPokemon.data.name;\n    const spritePokemon = detailedPokemon.data.sprites.front_default;\n    const descriptionPokemon = await axios.get(detailedPokemon.data.species.url); // console.log(detailedPokemon.data.id)\n\n    pokemonObject[\"namePokemon\"] = namePokemon;\n    pokemonObject[\"spritePokemon\"] = spritePokemon;\n    pokemonObject[\"descriptionPokemon\"] = descriptionPokemon.data.flavor_text_entries[1].flavor_text;\n    pokemonData.push(pokemonObject); // console.log(detailedPokemon.data.name)\n    // console.log(spritePokemon)\n    // console.log(descriptionPokemon.data.flavor_text_entries[1].flavor_text)\n  }\n\n  return pokemonData;\n}; // team name api methods\n\n\nPokeAPI.getTeamName = async () => {\n  const teamAdj = await axios.get(`${TEAM_URL}random/adjective`); // console.log(teamAdj.data)\n\n  const teamNoun = await axios.get(`${TEAM_URL}random/noun`); // console.log(teamNoun.data)\n\n  const teamName = \"Team \" + teamAdj.data + \" \" + teamNoun.data;\n  console.log(teamName);\n  return teamName.charAt(5).toUpperCase();\n};\n\nexport default PokeAPI;","map":{"version":3,"sources":["/Users/jin/codeplatoon/projects/pokemon/frontend/src/api/PokeAPI.js"],"names":["axios","apiHelpers","PokeAPI","BASE_URL","DJANGO_URL","TEAM_URL","login","loginData","tryCatchFetch","post","getCsrfConfig","logout","signUp","signUpData","getAllPokemon","allPokemon","get","pokemonData","pokemon","data","results","pokemonObject","detailedPokemon","url","namePokemon","name","spritePokemon","sprites","front_default","descriptionPokemon","species","flavor_text_entries","flavor_text","push","getTeamName","teamAdj","teamNoun","teamName","console","log","charAt","toUpperCase"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport apiHelpers from './apiHelpers'\n\nconst PokeAPI = { }\nconst BASE_URL = \"https://pokeapi.co/api/v2/\"\nconst DJANGO_URL = \"http://localhost:8000/poke_team/\"\nconst TEAM_URL = \"https://random-word-form.herokuapp.com/\"\n// const tryCatchFetch = async (axiosCall) => {\n//   try{\n//     const response = await axiosCall() //returns promise (tell us if we succeeded or failed), wait for promise to resolve\n//     return response.data\n//   }\n//   catch (e){\n//     console.error(\"tryCatchFetch LOOKIE LOOKIE:\", e)\n//     return null\n//   }\n// }\n//helper function, passing in a function 'axiosCall()'\n\n//authentication api methods\nPokeAPI.login = async (loginData) => {\n  return await apiHelpers.tryCatchFetch(\n    () => axios.post(`${DJANGO_URL}login/`, loginData, apiHelpers.getCsrfConfig())\n  )\n}\n\nPokeAPI.logout = async () => {\n  return await apiHelpers.tryCatchFetch(\n    () => axios.post(`${DJANGO_URL}logout/`, null, apiHelpers.getCsrfConfig())\n  )\n}\n\nPokeAPI.signUp = async (signUpData) => {\n  return await apiHelpers.tryCatchFetch(\n    () => axios.post(`${DJANGO_URL}users/`, signUpData, apiHelpers.getCsrfConfig())\n  )\n}\n\n\n\n\n// pokemon api methods\nPokeAPI.getAllPokemon = async () => {\n  const allPokemon = await axios.get(`${BASE_URL}pokemon?limit=10&offset=0`, apiHelpers.getCsrfConfig())\n  let pokemonData = []\n  for(let pokemon of allPokemon.data.results){\n      let pokemonObject = {}\n\n      const detailedPokemon = await axios.get(pokemon.url)\n\n      const namePokemon = detailedPokemon.data.name\n      const spritePokemon = detailedPokemon.data.sprites.front_default\n      const descriptionPokemon = await axios.get(detailedPokemon.data.species.url)\n      // console.log(detailedPokemon.data.id)\n      \n      pokemonObject[\"namePokemon\"] = namePokemon\n      pokemonObject[\"spritePokemon\"] = spritePokemon\n      pokemonObject[\"descriptionPokemon\"] = descriptionPokemon.data.flavor_text_entries[1].flavor_text\n      \n      pokemonData.push(pokemonObject)\n      // console.log(detailedPokemon.data.name)\n      // console.log(spritePokemon)\n      // console.log(descriptionPokemon.data.flavor_text_entries[1].flavor_text)\n    }\n  return pokemonData\n}\n\n// team name api methods\nPokeAPI.getTeamName = async () => {\n  const teamAdj = await axios.get(`${TEAM_URL}random/adjective`)\n    // console.log(teamAdj.data)\n  const teamNoun = await axios.get(`${TEAM_URL}random/noun`)\n    // console.log(teamNoun.data)\n  const teamName = (\"Team \" + teamAdj.data + \" \" + teamNoun.data)\n  console.log(teamName)\n  return teamName.charAt(5).toUpperCase()\n}\n\nexport default PokeAPI;"]},"metadata":{},"sourceType":"module"}