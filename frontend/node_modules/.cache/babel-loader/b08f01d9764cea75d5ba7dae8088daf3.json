{"ast":null,"code":"import axios from 'axios';\n\nconst tryCatchFetch = async axiosCall => {\n  try {\n    const response = await axiosCall(); //returns promise (tell us if we succeeded or failed), wait for promise to resolve\n\n    return response.data;\n  } catch (e) {\n    console.error(\"tryCatchFetch LOOKIE LOOKIE:\", e);\n    return null;\n  }\n}; //helper function, passing in a function 'axiosCall()'\n\n\nconst BASE_URL = \"https://pokeapi.co/api/v2/\";\nconst PokeAPI = {};\n\nPokeAPI.getAllPokemon = async () => {\n  const allPokemon = await axios.get(`${BASE_URL}pokemon?limit=151&offset=0`);\n  let pokemonData = [];\n\n  for (let pokemon of allPokemon.data.results) {\n    let pokemonObject = {};\n    const detailedPokemon = await axios.get(pokemon.url);\n    const namePokemon = detailedPokemon.data.name;\n    const spritePokemon = detailedPokemon.data.sprites.front_default;\n    const descriptionPokemon = await axios.get(detailedPokemon.data.species.url);\n    pokemonObject[\"namePokemon\"] = namePokemon;\n    pokemonObject[\"spritePokemon\"] = spritePokemon;\n    pokemonObject[\"descriptionPokemon\"] = descriptionPokemon.data.flavor_text_entries[1].flavor_text;\n    pokemonData.push(pokemonObject); // console.log(detailedPokemon.data.name)\n    // console.log(spritePokemon)\n    // console.log(descriptionPokemon.data.flavor_text_entries[1].flavor_text)\n  }\n\n  return pokemonData;\n}; // PokeAPI.getPokemonByName = async (name) => {\n//   return await tryCatchFetch(() => axios.get(`${BASE_URL}pokemon/${name}`))\n// }\n// PokeAPI.getPokemonArt = async (id) => {\n//   return await tryCatchFetch(() => axios.get(`${BASE_URL}pokemon/${id}`))\n// }\n\n\nexport default PokeAPI;","map":{"version":3,"sources":["/Users/jin/codeplatoon/projects/pokemon/frontend/src/api/PokeAPI.js"],"names":["axios","tryCatchFetch","axiosCall","response","data","e","console","error","BASE_URL","PokeAPI","getAllPokemon","allPokemon","get","pokemonData","pokemon","results","pokemonObject","detailedPokemon","url","namePokemon","name","spritePokemon","sprites","front_default","descriptionPokemon","species","flavor_text_entries","flavor_text","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAa,GAAG,MAAOC,SAAP,IAAqB;AACzC,MAAG;AACD,UAAMC,QAAQ,GAAG,MAAMD,SAAS,EAAhC,CADC,CACkC;;AACnC,WAAOC,QAAQ,CAACC,IAAhB;AACD,GAHD,CAIA,OAAOC,CAAP,EAAS;AACPC,IAAAA,OAAO,CAACC,KAAR,CAAc,8BAAd,EAA8CF,CAA9C;AACA,WAAO,IAAP;AACD;AACF,CATD,C,CAUA;;;AAGA,MAAMG,QAAQ,GAAG,4BAAjB;AAEA,MAAMC,OAAO,GAAG,EAAhB;;AAEAA,OAAO,CAACC,aAAR,GAAwB,YAAY;AAClC,QAAMC,UAAU,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,GAAEJ,QAAS,4BAAtB,CAAzB;AACA,MAAIK,WAAW,GAAG,EAAlB;;AACA,OAAI,IAAIC,OAAR,IAAmBH,UAAU,CAACP,IAAX,CAAgBW,OAAnC,EAA2C;AACvC,QAAIC,aAAa,GAAG,EAApB;AAEA,UAAMC,eAAe,GAAG,MAAMjB,KAAK,CAACY,GAAN,CAAUE,OAAO,CAACI,GAAlB,CAA9B;AAEA,UAAMC,WAAW,GAAGF,eAAe,CAACb,IAAhB,CAAqBgB,IAAzC;AACA,UAAMC,aAAa,GAAGJ,eAAe,CAACb,IAAhB,CAAqBkB,OAArB,CAA6BC,aAAnD;AACA,UAAMC,kBAAkB,GAAG,MAAMxB,KAAK,CAACY,GAAN,CAAUK,eAAe,CAACb,IAAhB,CAAqBqB,OAArB,CAA6BP,GAAvC,CAAjC;AAGAF,IAAAA,aAAa,CAAC,aAAD,CAAb,GAA+BG,WAA/B;AACAH,IAAAA,aAAa,CAAC,eAAD,CAAb,GAAiCK,aAAjC;AACAL,IAAAA,aAAa,CAAC,oBAAD,CAAb,GAAsCQ,kBAAkB,CAACpB,IAAnB,CAAwBsB,mBAAxB,CAA4C,CAA5C,EAA+CC,WAArF;AAEAd,IAAAA,WAAW,CAACe,IAAZ,CAAiBZ,aAAjB,EAduC,CAevC;AACA;AACA;AACD;;AACH,SAAOH,WAAP;AACD,CAvBD,C,CAyBA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,eAAeJ,OAAf","sourcesContent":["import axios from 'axios'\n\nconst tryCatchFetch = async (axiosCall) => {\n  try{\n    const response = await axiosCall() //returns promise (tell us if we succeeded or failed), wait for promise to resolve\n    return response.data\n  }\n  catch (e){\n    console.error(\"tryCatchFetch LOOKIE LOOKIE:\", e)\n    return null\n  }\n}\n//helper function, passing in a function 'axiosCall()'\n\n\nconst BASE_URL = \"https://pokeapi.co/api/v2/\"\n\nconst PokeAPI = { }\n\nPokeAPI.getAllPokemon = async () => {\n  const allPokemon = await axios.get(`${BASE_URL}pokemon?limit=151&offset=0`)\n  let pokemonData = []\n  for(let pokemon of allPokemon.data.results){\n      let pokemonObject = {}\n\n      const detailedPokemon = await axios.get(pokemon.url)\n\n      const namePokemon = detailedPokemon.data.name\n      const spritePokemon = detailedPokemon.data.sprites.front_default\n      const descriptionPokemon = await axios.get(detailedPokemon.data.species.url)\n\n      \n      pokemonObject[\"namePokemon\"] = namePokemon\n      pokemonObject[\"spritePokemon\"] = spritePokemon\n      pokemonObject[\"descriptionPokemon\"] = descriptionPokemon.data.flavor_text_entries[1].flavor_text\n      \n      pokemonData.push(pokemonObject)\n      // console.log(detailedPokemon.data.name)\n      // console.log(spritePokemon)\n      // console.log(descriptionPokemon.data.flavor_text_entries[1].flavor_text)\n    }\n  return pokemonData\n}\n\n// PokeAPI.getPokemonByName = async (name) => {\n//   return await tryCatchFetch(() => axios.get(`${BASE_URL}pokemon/${name}`))\n// }\n\n// PokeAPI.getPokemonArt = async (id) => {\n//   return await tryCatchFetch(() => axios.get(`${BASE_URL}pokemon/${id}`))\n// }\n\nexport default PokeAPI;"]},"metadata":{},"sourceType":"module"}