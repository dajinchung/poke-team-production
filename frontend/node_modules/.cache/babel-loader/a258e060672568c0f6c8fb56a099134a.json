{"ast":null,"code":"import axios from 'axios';\n\nconst tryCatchFetch = async axiosCall => {\n  try {\n    const response = await axiosCall(); //returns promise (tell us if we succeeded or failed), wait for promise to resolve\n\n    return response.data;\n  } catch (e) {\n    console.error(\"tryCatchFetch ERROR:\", e);\n    return null;\n  }\n}; //helper function, passing in a function 'axiosCall()'\n\n\nconst BASE_URL = \"https://pokeapi.co/api/v2/\";\nconst PokeAPI = {};\n\nPokeAPI.getAllPokemon = async () => {\n  const data = await tryCatchFetch(() => axios.get(`${BASE_URL}pokemon?limit=10&offset=0`));\n  return data;\n};\n\nPokeAPI.getPokemonByName = async name => {\n  return await tryCatchFetch(() => axios.get(`${BASE_URL}pokemon/${name}`));\n};\n\nPokeAPI.getPokemonData = async (name, url) => {\n  return await tryCatchFetch(() => axios.get(`${BASE_URL}pokemon/${name}`, url).then(response => {\n    for (let i = 0; i < 0, i++;) {\n      console.log(response.sprites.other.official - artwork.front_default);\n    }\n  }));\n}; // PokeAPI.getPokemonData = async (url) => {\n//   return await tryCatchFetch(() => axios.get(url))\n// }\n\n\nexport default PokeAPI;","map":{"version":3,"sources":["/Users/jin/codeplatoon/projects/pokemon/frontend/src/api/PokeAPI.js"],"names":["axios","tryCatchFetch","axiosCall","response","data","e","console","error","BASE_URL","PokeAPI","getAllPokemon","get","getPokemonByName","name","getPokemonData","url","then","i","log","sprites","other","official","artwork","front_default"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAa,GAAG,MAAOC,SAAP,IAAqB;AACzC,MAAG;AACD,UAAMC,QAAQ,GAAG,MAAMD,SAAS,EAAhC,CADC,CACkC;;AACnC,WAAOC,QAAQ,CAACC,IAAhB;AACD,GAHD,CAIA,OAAOC,CAAP,EAAS;AACPC,IAAAA,OAAO,CAACC,KAAR,CAAc,sBAAd,EAAsCF,CAAtC;AACA,WAAO,IAAP;AACD;AACF,CATD,C,CAUA;;;AAGA,MAAMG,QAAQ,GAAG,4BAAjB;AAEA,MAAMC,OAAO,GAAG,EAAhB;;AAEAA,OAAO,CAACC,aAAR,GAAwB,YAAY;AAClC,QAAMN,IAAI,GAAG,MAAMH,aAAa,CAAC,MAAMD,KAAK,CAACW,GAAN,CAAW,GAAEH,QAAS,2BAAtB,CAAP,CAAhC;AAEA,SAAOJ,IAAP;AACD,CAJD;;AAMAK,OAAO,CAACG,gBAAR,GAA2B,MAAOC,IAAP,IAAgB;AACzC,SAAO,MAAMZ,aAAa,CAAC,MAAMD,KAAK,CAACW,GAAN,CAAW,GAAEH,QAAS,WAAUK,IAAK,EAArC,CAAP,CAA1B;AACD,CAFD;;AAKAJ,OAAO,CAACK,cAAR,GAAyB,OAAOD,IAAP,EAAaE,GAAb,KAAqB;AAC5C,SAAO,MAAMd,aAAa,CAAC,MAAMD,KAAK,CAACW,GAAN,CAAW,GAAEH,QAAS,WAAUK,IAAK,EAArC,EAAwCE,GAAxC,EAC9BC,IAD8B,CACxBb,QAAD,IAAc;AAClB,SAAI,IAAIc,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAJ,EAAOA,CAAC,EAAvB,GAA2B;AACzBX,MAAAA,OAAO,CAACY,GAAR,CAAYf,QAAQ,CAACgB,OAAT,CAAiBC,KAAjB,CAAuBC,QAAvB,GAAgCC,OAAO,CAACC,aAApD;AACH;AACF,GALgC,CAAP,CAA1B;AAMD,CAPD,C,CAeA;AACA;AACA;;;AAEA,eAAed,OAAf","sourcesContent":["import axios from 'axios'\n\nconst tryCatchFetch = async (axiosCall) => {\n  try{\n    const response = await axiosCall() //returns promise (tell us if we succeeded or failed), wait for promise to resolve\n    return response.data\n  }\n  catch (e){\n    console.error(\"tryCatchFetch ERROR:\", e)\n    return null\n  }\n}\n//helper function, passing in a function 'axiosCall()'\n\n\nconst BASE_URL = \"https://pokeapi.co/api/v2/\"\n\nconst PokeAPI = { }\n\nPokeAPI.getAllPokemon = async () => {\n  const data = await tryCatchFetch(() => axios.get(`${BASE_URL}pokemon?limit=10&offset=0`))\n\n  return data\n}\n\nPokeAPI.getPokemonByName = async (name) => {\n  return await tryCatchFetch(() => axios.get(`${BASE_URL}pokemon/${name}`))\n}\n\n\nPokeAPI.getPokemonData = async (name, url) => {\n  return await tryCatchFetch(() => axios.get(`${BASE_URL}pokemon/${name}`, url)\n    .then((response) => {\n      for(let i = 0; i < 0, i++;){\n        console.log(response.sprites.other.official-artwork.front_default)\n    }\n  }))\n}\n\n\n\n\n\n\n\n// PokeAPI.getPokemonData = async (url) => {\n//   return await tryCatchFetch(() => axios.get(url))\n// }\n\nexport default PokeAPI;"]},"metadata":{},"sourceType":"module"}