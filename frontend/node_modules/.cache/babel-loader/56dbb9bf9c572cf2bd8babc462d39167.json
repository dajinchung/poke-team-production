{"ast":null,"code":"import axios from 'axios';\nimport apiHelpers from './apiHelpers';\nconst PokeAPI = {};\nconst BASE_URL = \"https://pokeapi.co/api/v2/\";\nconst DJANGO_URL = \"http://localhost:8000/poke_team/\"; // const tryCatchFetch = async (axiosCall) => {\n//   try{\n//     const response = await axiosCall() //returns promise (tell us if we succeeded or failed), wait for promise to resolve\n//     return response.data\n//   }\n//   catch (e){\n//     console.error(\"tryCatchFetch LOOKIE LOOKIE:\", e)\n//     return null\n//   }\n// }\n//helper function, passing in a function 'axiosCall()'\n//authentication api methods\n\nPokeAPI.login = async loginData => {\n  return await apiHelpers.tryCatchFetch(() => axios.post(`${DJANGO_URL}login/`, loginData, apiHelpers.getCsrfConfig()));\n};\n\nPokeAPI.getAllPokemon = async () => {\n  const allPokemon = await axios.get(`${BASE_URL}pokemon?limit=10&offset=0`, apiHelpers.getCsrfConfig());\n  let pokemonData = [];\n\n  for (let pokemon of allPokemon.data.results) {\n    let pokemonObject = {};\n    const detailedPokemon = await axios.get(pokemon.url);\n    const namePokemon = detailedPokemon.data.name;\n    const spritePokemon = detailedPokemon.data.sprites.front_default;\n    const descriptionPokemon = await axios.get(detailedPokemon.data.species.url); // console.log(detailedPokemon.data.id)\n\n    pokemonObject[\"namePokemon\"] = namePokemon;\n    pokemonObject[\"spritePokemon\"] = spritePokemon;\n    pokemonObject[\"descriptionPokemon\"] = descriptionPokemon.data.flavor_text_entries[1].flavor_text;\n    pokemonData.push(pokemonObject); // console.log(detailedPokemon.data.name)\n    // console.log(spritePokemon)\n    // console.log(descriptionPokemon.data.flavor_text_entries[1].flavor_text)\n  }\n\n  return pokemonData;\n};\n\nPokeAPI.createPokemonTeam = async pokeid => {\n  return await apiHelpers.tryCatchFetch(() => axios.post(`${BASE_URL}/your-team/`, pokeid, apiHelpers.getCsrftConfig()));\n};\n\nPokeAPI.getPokemonById = async pokeId => {\n  return await apiHelpers.tryCatchFetch(() => axios.get(`${BASE_URL}/your-team/${pokeId}/`, apiHelpers.getCsrftConfig()));\n};\n\nexport default PokeAPI;","map":{"version":3,"sources":["/Users/jin/codeplatoon/projects/pokemon/frontend/src/api/PokeAPI.js"],"names":["axios","apiHelpers","PokeAPI","BASE_URL","DJANGO_URL","login","loginData","tryCatchFetch","post","getCsrfConfig","getAllPokemon","allPokemon","get","pokemonData","pokemon","data","results","pokemonObject","detailedPokemon","url","namePokemon","name","spritePokemon","sprites","front_default","descriptionPokemon","species","flavor_text_entries","flavor_text","push","createPokemonTeam","pokeid","getCsrftConfig","getPokemonById","pokeId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,MAAMC,OAAO,GAAG,EAAhB;AACA,MAAMC,QAAQ,GAAG,4BAAjB;AACA,MAAMC,UAAU,GAAG,kCAAnB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACAF,OAAO,CAACG,KAAR,GAAgB,MAAOC,SAAP,IAAqB;AACnC,SAAO,MAAML,UAAU,CAACM,aAAX,CACX,MAAMP,KAAK,CAACQ,IAAN,CAAY,GAAEJ,UAAW,QAAzB,EAAkCE,SAAlC,EAA6CL,UAAU,CAACQ,aAAX,EAA7C,CADK,CAAb;AAGD,CAJD;;AAOAP,OAAO,CAACQ,aAAR,GAAwB,YAAY;AAClC,QAAMC,UAAU,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,GAAET,QAAS,2BAAtB,EAAkDF,UAAU,CAACQ,aAAX,EAAlD,CAAzB;AACA,MAAII,WAAW,GAAG,EAAlB;;AACA,OAAI,IAAIC,OAAR,IAAmBH,UAAU,CAACI,IAAX,CAAgBC,OAAnC,EAA2C;AACvC,QAAIC,aAAa,GAAG,EAApB;AAEA,UAAMC,eAAe,GAAG,MAAMlB,KAAK,CAACY,GAAN,CAAUE,OAAO,CAACK,GAAlB,CAA9B;AAEA,UAAMC,WAAW,GAAGF,eAAe,CAACH,IAAhB,CAAqBM,IAAzC;AACA,UAAMC,aAAa,GAAGJ,eAAe,CAACH,IAAhB,CAAqBQ,OAArB,CAA6BC,aAAnD;AACA,UAAMC,kBAAkB,GAAG,MAAMzB,KAAK,CAACY,GAAN,CAAUM,eAAe,CAACH,IAAhB,CAAqBW,OAArB,CAA6BP,GAAvC,CAAjC,CAPuC,CAQvC;;AAEAF,IAAAA,aAAa,CAAC,aAAD,CAAb,GAA+BG,WAA/B;AACAH,IAAAA,aAAa,CAAC,eAAD,CAAb,GAAiCK,aAAjC;AACAL,IAAAA,aAAa,CAAC,oBAAD,CAAb,GAAsCQ,kBAAkB,CAACV,IAAnB,CAAwBY,mBAAxB,CAA4C,CAA5C,EAA+CC,WAArF;AAEAf,IAAAA,WAAW,CAACgB,IAAZ,CAAiBZ,aAAjB,EAduC,CAevC;AACA;AACA;AACD;;AACH,SAAOJ,WAAP;AACD,CAvBD;;AAyBAX,OAAO,CAAC4B,iBAAR,GAA4B,MAAOC,MAAP,IAAkB;AAC5C,SAAO,MAAM9B,UAAU,CAACM,aAAX,CACX,MAAMP,KAAK,CAACQ,IAAN,CAAY,GAAEL,QAAS,aAAvB,EAAqC4B,MAArC,EAA6C9B,UAAU,CAAC+B,cAAX,EAA7C,CADK,CAAb;AAED,CAHD;;AAKA9B,OAAO,CAAC+B,cAAR,GAAyB,MAAOC,MAAP,IAAkB;AACzC,SAAO,MAAMjC,UAAU,CAACM,aAAX,CACX,MAAMP,KAAK,CAACY,GAAN,CAAY,GAAET,QAAS,cAAa+B,MAAO,GAA3C,EAA+CjC,UAAU,CAAC+B,cAAX,EAA/C,CADK,CAAb;AAGD,CAJD;;AAKA,eAAe9B,OAAf","sourcesContent":["import axios from 'axios'\nimport apiHelpers from './apiHelpers'\n\nconst PokeAPI = { }\nconst BASE_URL = \"https://pokeapi.co/api/v2/\"\nconst DJANGO_URL = \"http://localhost:8000/poke_team/\"\n\n// const tryCatchFetch = async (axiosCall) => {\n//   try{\n//     const response = await axiosCall() //returns promise (tell us if we succeeded or failed), wait for promise to resolve\n//     return response.data\n//   }\n//   catch (e){\n//     console.error(\"tryCatchFetch LOOKIE LOOKIE:\", e)\n//     return null\n//   }\n// }\n//helper function, passing in a function 'axiosCall()'\n\n//authentication api methods\nPokeAPI.login = async (loginData) => {\n  return await apiHelpers.tryCatchFetch(\n    () => axios.post(`${DJANGO_URL}login/`, loginData, apiHelpers.getCsrfConfig())\n  )\n}\n\n\nPokeAPI.getAllPokemon = async () => {\n  const allPokemon = await axios.get(`${BASE_URL}pokemon?limit=10&offset=0`, apiHelpers.getCsrfConfig())\n  let pokemonData = []\n  for(let pokemon of allPokemon.data.results){\n      let pokemonObject = {}\n\n      const detailedPokemon = await axios.get(pokemon.url)\n\n      const namePokemon = detailedPokemon.data.name\n      const spritePokemon = detailedPokemon.data.sprites.front_default\n      const descriptionPokemon = await axios.get(detailedPokemon.data.species.url)\n      // console.log(detailedPokemon.data.id)\n      \n      pokemonObject[\"namePokemon\"] = namePokemon\n      pokemonObject[\"spritePokemon\"] = spritePokemon\n      pokemonObject[\"descriptionPokemon\"] = descriptionPokemon.data.flavor_text_entries[1].flavor_text\n      \n      pokemonData.push(pokemonObject)\n      // console.log(detailedPokemon.data.name)\n      // console.log(spritePokemon)\n      // console.log(descriptionPokemon.data.flavor_text_entries[1].flavor_text)\n    }\n  return pokemonData\n}\n\nPokeAPI.createPokemonTeam = async (pokeid) => {\n  return await apiHelpers.tryCatchFetch(\n    () => axios.post(`${BASE_URL}/your-team/`, pokeid, apiHelpers.getCsrftConfig()))\n}\n\nPokeAPI.getPokemonById = async (pokeId) => {\n  return await apiHelpers.tryCatchFetch(\n    () => axios.get (`${BASE_URL}/your-team/${pokeId}/`, apiHelpers.getCsrftConfig())\n  )\n}\nexport default PokeAPI;"]},"metadata":{},"sourceType":"module"}