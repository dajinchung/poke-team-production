{"ast":null,"code":"var _jsxFileName = \"/Users/jin/codeplatoon/projects/pokemon/frontend/src/pages/CreateTeamPage.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport PokeAPI from '../api/PokeAPI';\nimport PokemonList from '../components/PokemonList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateTeamPage(props) {\n  _s();\n\n  var _props$pokeTeam;\n\n  // states\n  const [pokemonData, setPokemonData] = useState([]); //event handler\n\n  const loadPokemon = async () => {\n    const filteredPokemonData = await PokeAPI.getAllPokemon(); // set a data variable, wait for load pokemon to load...then call API here.\n    // console.log(filteredPokemonData)\n    // console.log(data)\n    //if data within API call exists then return the values of that data and set it as the current value.\n\n    setPokemonData(filteredPokemonData);\n  }; // effects\n\n\n  useEffect(() => {\n    loadPokemon();\n  }, [props.username]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Team:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PokemonList, {\n      poketeam: (_props$pokeTeam = props.pokeTeam) === null || _props$pokeTeam === void 0 ? void 0 : _props$pokeTeam.map(pokemon => pokemon[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Choose your Pokemon!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PokemonList, {\n      pokemonData: pokemonData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateTeamPage, \"xeE2uGx9hfCzd+Xy/GBcy63RwIM=\");\n\n_c = CreateTeamPage;\nexport default CreateTeamPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTeamPage\");","map":{"version":3,"sources":["/Users/jin/codeplatoon/projects/pokemon/frontend/src/pages/CreateTeamPage.js"],"names":["useEffect","useState","PokeAPI","PokemonList","CreateTeamPage","props","pokemonData","setPokemonData","loadPokemon","filteredPokemonData","getAllPokemon","username","pokeTeam","map","pokemon"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA8B;AAAA;;AAAA;;AAE5B;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C,CAH4B,CAK5B;;AACA,QAAMO,WAAW,GAAG,YAAY;AAC9B,UAAMC,mBAAmB,GAAG,MAAMP,OAAO,CAACQ,aAAR,EAAlC,CAD8B,CAE5B;AACA;AACA;AACA;;AACCH,IAAAA,cAAc,CAACE,mBAAD,CAAd;AACJ,GAPD,CAN4B,CAe9B;;;AACET,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACH,KAAK,CAACM,QAAP,CAFM,CAAT;AAKA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAa,MAAA,QAAQ,qBAAGN,KAAK,CAACO,QAAT,oDAAG,gBAAgBC,GAAhB,CAAqBC,OAAD,IAC1CA,OAAO,CAAC,CAAD,CADe;AAAxB;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,WAAD;AAAa,MAAA,WAAW,EAAGR;AAA3B;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAhCQF,c;;KAAAA,c;AAiCT,eAAeA,cAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport PokeAPI from '../api/PokeAPI';\nimport PokemonList from '../components/PokemonList';\n\nfunction CreateTeamPage(props){\n  \n  // states\n  const [pokemonData, setPokemonData] = useState([])\n  \n  //event handler\n  const loadPokemon = async () => {\n    const filteredPokemonData = await PokeAPI.getAllPokemon()\n      // set a data variable, wait for load pokemon to load...then call API here.\n      // console.log(filteredPokemonData)\n      // console.log(data)\n      //if data within API call exists then return the values of that data and set it as the current value.\n       setPokemonData(filteredPokemonData)\n  }\n\n// effects\n  useEffect(() => {\n    loadPokemon()\n  }, [props.username])\n  \n            \n  return (\n    <div>\n      <h1>Your Team:</h1>\n      <PokemonList poketeam={ props.pokeTeam?.map((pokemon) => \n        pokemon[0]\n        )} />\n      <hr />\n      <h3>Choose your Pokemon!</h3>\n      <PokemonList pokemonData={ pokemonData } />\n    </div>\n  );\n}\nexport default CreateTeamPage;"]},"metadata":{},"sourceType":"module"}