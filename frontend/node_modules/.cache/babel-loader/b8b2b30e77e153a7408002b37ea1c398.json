{"ast":null,"code":"var _jsxFileName = \"/Users/jin/codeplatoon/projects/pokemon/frontend/src/pages/CreateTeamPage.js\",\n    _s = $RefreshSig$();\n\nimport react, { useEffect, useState } from 'react';\nimport PokeAPI from '../api/PokeAPI';\nimport PokemonList from '../components/pokemons/PokemonList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SAMPLE_POKEMON = [{\n  id: 'p1',\n  poke_name: 'Cyndaquil',\n  image: \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/155.png\",\n  type: 'Fire',\n  description: 'It is timid, and\\nalways curls it­\\nself up in a ball.\\fIf attacked, it\\nflares up its back\\nfor protection.'\n}, {\n  id: 'p2',\n  poke_name: 'Totodile',\n  image: 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/158.png',\n  type: 'Water',\n  description: \"Its well-developed\\njaws are powerful\\nand capable of\\fcrushing anything.\\nEven its trainer\\nmust be careful.\"\n}, {\n  id: 'p3',\n  poke_name: 'Chikorita',\n  image: 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/152.png',\n  type: 'Grass',\n  description: \"A sweet aroma\\ngently wafts from\\nthe leaf on its\\fhead. It is docile\\nand loves to soak\\nup the sun's rays.\"\n}, {\n  id: 'p4',\n  poke_name: 'Kyogre',\n  image: 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/382.png',\n  type: 'Water',\n  description: \"That's a big fish\"\n}];\n\nfunction CreateTeamPage() {\n  _s();\n\n  // states\n  const [pokemonData, setPokemonData] = useState();\n  const [pokemonFlavorTextArr, setPokemonFlavorTextArr] = useState();\n\n  const loadPokemon = async () => {\n    const data = await PokeAPI.getAllPokemon();\n\n    if (data) {\n      console.log(data);\n      return setPokemonData(data);\n    } else {\n      console.log('NO DATA FROM API');\n    }\n  };\n\n  const loadFlavorText = async () => {\n    for (let i = 0; i < (pokemonData === null || pokemonData === void 0 ? void 0 : pokemonData.results.length); i++) {\n      const url = pokemonData.results[i].url;\n      const pokemonVersion = await PokeAPI.getPokemonData(url);\n      console.log(pokemonVersion.species.url);\n      const speciesURL = pokemonVersion.species.url;\n      const pokemonSpeciesData = await PokeAPI.getPokemonData(speciesUrl); // console.log(pokemonSpeciesData)\n      //   const flavorText = pokemonSpeciesData.flavor_text\n    } //NOTE// async function with loop. make state value creating an array, each array has urls\n\n  };\n\n  useEffect(() => {\n    loadPokemon();\n    loadFlavorText();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Team Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Choose your Pokemon!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PokemonList, {\n      pokemonData: pokemonData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateTeamPage, \"OUWY22lno3SC7tAAOP0E2ygB52E=\");\n\n_c = CreateTeamPage;\nexport default CreateTeamPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTeamPage\");","map":{"version":3,"sources":["/Users/jin/codeplatoon/projects/pokemon/frontend/src/pages/CreateTeamPage.js"],"names":["react","useEffect","useState","PokeAPI","PokemonList","SAMPLE_POKEMON","id","poke_name","image","type","description","CreateTeamPage","pokemonData","setPokemonData","pokemonFlavorTextArr","setPokemonFlavorTextArr","loadPokemon","data","getAllPokemon","console","log","loadFlavorText","i","results","length","url","pokemonVersion","getPokemonData","species","speciesURL","pokemonSpeciesData","speciesUrl"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,WAAP,MAAwB,oCAAxB;;AAEA,MAAMC,cAAc,GAAG,CACrB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,SAAS,EAAE,WAFb;AAGEC,EAAAA,KAAK,EAAE,yGAHT;AAIEC,EAAAA,IAAI,EAAE,MAJR;AAKEC,EAAAA,WAAW,EAAE;AALf,CADqB,EAQrB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,SAAS,EAAE,UAFb;AAGEC,EAAAA,KAAK,EAAE,yGAHT;AAIEC,EAAAA,IAAI,EAAE,OAJR;AAKEC,EAAAA,WAAW,EAAE;AALf,CARqB,EAerB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,SAAS,EAAE,WAFb;AAGEC,EAAAA,KAAK,EAAE,yGAHT;AAIEC,EAAAA,IAAI,EAAE,OAJR;AAKEC,EAAAA,WAAW,EAAE;AALf,CAfqB,EAsBrB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,SAAS,EAAE,QAFb;AAGEC,EAAAA,KAAK,EAAE,yGAHT;AAIEC,EAAAA,IAAI,EAAE,OAJR;AAKEC,EAAAA,WAAW,EAAE;AALf,CAtBqB,CAAvB;;AAkCA,SAASC,cAAT,GAAyB;AAAA;;AAEvB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,EAA9C;AACA,QAAM,CAACY,oBAAD,EAAuBC,uBAAvB,IAAkDb,QAAQ,EAAhE;;AAEA,QAAMc,WAAW,GAAG,YAAY;AAC9B,UAAMC,IAAI,GAAG,MAAMd,OAAO,CAACe,aAAR,EAAnB;;AACA,QAAID,IAAJ,EAAU;AACRE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,aAAOJ,cAAc,CAACI,IAAD,CAArB;AACD,KAHD,MAII;AACFE,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD;AACF,GATD;;AAWA,QAAMC,cAAc,GAAG,YAAY;AACjC,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAGV,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEW,OAAb,CAAqBC,MAAxB,CAAjB,EAAiDF,CAAC,EAAlD,EAAsD;AACpD,YAAMG,GAAG,GAAGb,WAAW,CAACW,OAAZ,CAAoBD,CAApB,EAAuBG,GAAnC;AACA,YAAMC,cAAc,GAAG,MAAMvB,OAAO,CAACwB,cAAR,CAAuBF,GAAvB,CAA7B;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYM,cAAc,CAACE,OAAf,CAAuBH,GAAnC;AACA,YAAMI,UAAU,GAAGH,cAAc,CAACE,OAAf,CAAuBH,GAA1C;AACA,YAAMK,kBAAkB,GAAG,MAAM3B,OAAO,CAACwB,cAAR,CAAuBI,UAAvB,CAAjC,CALoD,CAMpD;AACF;AACC,KATgC,CAUjC;;AACD,GAXD;;AAcA9B,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,WAAW;AACXK,IAAAA,cAAc;AACf,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,WAAD;AAAa,MAAA,WAAW,EAAET;AAA1B;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA3CQD,c;;KAAAA,c;AA6CT,eAAeA,cAAf","sourcesContent":["import react, { useEffect, useState } from 'react';\nimport PokeAPI from '../api/PokeAPI';\nimport PokemonList from '../components/pokemons/PokemonList'\n\nconst SAMPLE_POKEMON = [\n  {\n    id: 'p1',\n    poke_name: 'Cyndaquil',\n    image: \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/155.png\",\n    type: 'Fire',\n    description: 'It is timid, and\\nalways curls it­\\nself up in a ball.\\fIf attacked, it\\nflares up its back\\nfor protection.'\n  },\n  {\n    id: 'p2',\n    poke_name: 'Totodile',\n    image: 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/158.png',\n    type: 'Water',\n    description: \"Its well-developed\\njaws are powerful\\nand capable of\\fcrushing anything.\\nEven its trainer\\nmust be careful.\"\n  },\n  {\n    id: 'p3',\n    poke_name: 'Chikorita',\n    image: 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/152.png',\n    type: 'Grass',\n    description: \"A sweet aroma\\ngently wafts from\\nthe leaf on its\\fhead. It is docile\\nand loves to soak\\nup the sun's rays.\"\n  },\n  {\n    id: 'p4',\n    poke_name: 'Kyogre',\n    image: 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/382.png',\n    type: 'Water',\n    description: \"That's a big fish\"\n  }\n];\n\n\n\n\nfunction CreateTeamPage(){\n\n  // states\n  const [pokemonData, setPokemonData] = useState()\n  const [pokemonFlavorTextArr, setPokemonFlavorTextArr] = useState()\n\n  const loadPokemon = async () => {\n    const data = await PokeAPI.getAllPokemon()\n    if (data) {\n      console.log(data)\n      return setPokemonData(data)\n    }\n    else{\n      console.log('NO DATA FROM API')\n    }\n  }\n\n  const loadFlavorText = async () => {\n    for (let i = 0; i < pokemonData?.results.length; i++) {\n      const url = pokemonData.results[i].url\n      const pokemonVersion = await PokeAPI.getPokemonData(url)\n      console.log(pokemonVersion.species.url)\n      const speciesURL = pokemonVersion.species.url\n      const pokemonSpeciesData = await PokeAPI.getPokemonData(speciesUrl)\n      // console.log(pokemonSpeciesData)\n    //   const flavorText = pokemonSpeciesData.flavor_text\n    }\n    //NOTE// async function with loop. make state value creating an array, each array has urls\n  }\n\n\n  useEffect(() => {\n    loadPokemon()\n    loadFlavorText()\n  }, [])\n\n  return (\n    <div>\n      <h1>Create Team Page</h1>\n      <h3>Choose your Pokemon!</h3>\n      <PokemonList pokemonData={pokemonData} />\n    </div>\n  );\n}\n\nexport default CreateTeamPage;"]},"metadata":{},"sourceType":"module"}