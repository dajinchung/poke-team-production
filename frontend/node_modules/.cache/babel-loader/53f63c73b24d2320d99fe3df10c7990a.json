{"ast":null,"code":"import axios from 'axios';\n\nconst tryCatchFetch = async axiosCall => {\n  try {\n    const response = await axiosCall(); //returns promise (tell us if we succeeded or failed), wait for promise to resolve\n\n    return response.data;\n  } catch (e) {\n    console.error(\"tryCatchFetch LOOKIE LOOKIE:\", e);\n    return null;\n  }\n}; //helper function, passing in a function 'axiosCall()'\n\n\nconst BASE_URL = \"https://pokeapi.co/api/v2/\";\nconst PokeAPI = {};\n\nPokeAPI.getAllPokemon = async () => {\n  const allPokemon = await axios.get(`${BASE_URL}pokemon?limit=10&offset=0`);\n\n  if (allPokemon) {\n    console.log(allPokemon);\n\n    for (let pokemon of allPokemon.data) {\n      console.log(pokemon); // const detailedPokemon = await axios.get(pokemon.url)\n      // const descriptionPokemon = await axios.get(detailedPokemon.data.species.url)\n      // console.log(detailedPokemon)\n      // console.log(descriptionPokemon)\n      // console.log(descriptionPokemon.data.flavor_text_entries[0].flavor_text)\n    }\n  }\n\n  return allPokemon;\n}; // PokeAPI.getPokemonByName = async (name) => {\n//   return await tryCatchFetch(() => axios.get(`${BASE_URL}pokemon/${name}`))\n// }\n// PokeAPI.getPokemonArt = async (id) => {\n//   return await tryCatchFetch(() => axios.get(`${BASE_URL}pokemon/${id}`))\n// }\n\n\nexport default PokeAPI;","map":{"version":3,"sources":["/Users/jin/codeplatoon/projects/pokemon/frontend/src/api/PokeAPI.js"],"names":["axios","tryCatchFetch","axiosCall","response","data","e","console","error","BASE_URL","PokeAPI","getAllPokemon","allPokemon","get","log","pokemon"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAa,GAAG,MAAOC,SAAP,IAAqB;AACzC,MAAG;AACD,UAAMC,QAAQ,GAAG,MAAMD,SAAS,EAAhC,CADC,CACkC;;AACnC,WAAOC,QAAQ,CAACC,IAAhB;AACD,GAHD,CAIA,OAAOC,CAAP,EAAS;AACPC,IAAAA,OAAO,CAACC,KAAR,CAAc,8BAAd,EAA8CF,CAA9C;AACA,WAAO,IAAP;AACD;AACF,CATD,C,CAUA;;;AAGA,MAAMG,QAAQ,GAAG,4BAAjB;AAEA,MAAMC,OAAO,GAAG,EAAhB;;AAEAA,OAAO,CAACC,aAAR,GAAwB,YAAY;AAClC,QAAMC,UAAU,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,GAAEJ,QAAS,2BAAtB,CAAzB;;AACA,MAAGG,UAAH,EAAc;AACZL,IAAAA,OAAO,CAACO,GAAR,CAAYF,UAAZ;;AACF,SAAI,IAAIG,OAAR,IAAmBH,UAAU,CAACP,IAA9B,EAAmC;AAC/BE,MAAAA,OAAO,CAACO,GAAR,CAAYC,OAAZ,EAD+B,CAE/B;AACA;AACA;AACA;AACA;AACD;AACF;;AACD,SAAOH,UAAP;AACD,CAdD,C,CAgBA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,eAAeF,OAAf","sourcesContent":["import axios from 'axios'\n\nconst tryCatchFetch = async (axiosCall) => {\n  try{\n    const response = await axiosCall() //returns promise (tell us if we succeeded or failed), wait for promise to resolve\n    return response.data\n  }\n  catch (e){\n    console.error(\"tryCatchFetch LOOKIE LOOKIE:\", e)\n    return null\n  }\n}\n//helper function, passing in a function 'axiosCall()'\n\n\nconst BASE_URL = \"https://pokeapi.co/api/v2/\"\n\nconst PokeAPI = { }\n\nPokeAPI.getAllPokemon = async () => {\n  const allPokemon = await axios.get(`${BASE_URL}pokemon?limit=10&offset=0`)\n  if(allPokemon){ \n    console.log(allPokemon) \n  for(let pokemon of allPokemon.data){\n      console.log(pokemon)\n      // const detailedPokemon = await axios.get(pokemon.url)\n      // const descriptionPokemon = await axios.get(detailedPokemon.data.species.url)\n      // console.log(detailedPokemon)\n      // console.log(descriptionPokemon)\n      // console.log(descriptionPokemon.data.flavor_text_entries[0].flavor_text)\n    }\n  }\n  return allPokemon\n}\n\n// PokeAPI.getPokemonByName = async (name) => {\n//   return await tryCatchFetch(() => axios.get(`${BASE_URL}pokemon/${name}`))\n// }\n\n// PokeAPI.getPokemonArt = async (id) => {\n//   return await tryCatchFetch(() => axios.get(`${BASE_URL}pokemon/${id}`))\n// }\n\nexport default PokeAPI;"]},"metadata":{},"sourceType":"module"}