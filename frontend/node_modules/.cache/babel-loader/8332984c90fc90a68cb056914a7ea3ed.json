{"ast":null,"code":"import Cookie from \"js-cookie\"; //npm install js-cookie\n\nconst apiHelpers = {}; //added for authentication\n\napiHelpers.getCsrfConfig = () => {\n  return {\n    withCredential: true,\n    //required for sep proj setup\n    headers: {\n      'X-CSRFToken': Cookie.get(\"csrftoken\")\n    }\n  };\n};\n\napiHelpers.tryCatchFetch = async axiosCall => {\n  try {\n    const response = await axiosCall(); // console.log(\"RESPONSE:\", response)\n    // console.log(\"RESPONSE DATA:\", response.data)\n\n    return response.data ? response.data : {\n      message: \"success\"\n    }; // does not look like promise but auto converts to a promise due to async function behavior\n  } catch (e) {\n    console.error(\"--tryCatchFetch ERROR:\", e.response ? e.response.data : e);\n    return null;\n  }\n};\n\nexport default apiHelpers;","map":{"version":3,"sources":["/Users/jin/codeplatoon/projects/pokemon/frontend/src/api/apiHelpers.js"],"names":["Cookie","apiHelpers","getCsrfConfig","withCredential","headers","get","tryCatchFetch","axiosCall","response","data","message","e","console","error"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,WAAnB,C,CACA;;AAEA,MAAMC,UAAU,GAAG,EAAnB,C,CAGA;;AACAA,UAAU,CAACC,aAAX,GAA2B,MAAM;AAC/B,SAAO;AACLC,IAAAA,cAAc,EAAE,IADX;AACiB;AACtBC,IAAAA,OAAO,EAAE;AACP,qBAAeJ,MAAM,CAACK,GAAP,CAAW,WAAX;AADR;AAFJ,GAAP;AAMD,CAPD;;AASAJ,UAAU,CAACK,aAAX,GAA2B,MAAOC,SAAP,IAAqB;AAC9C,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMD,SAAS,EAAhC,CADE,CAEF;AACA;;AACA,WAAOC,QAAQ,CAACC,IAAT,GAAgBD,QAAQ,CAACC,IAAzB,GAAgC;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAvC,CAJE,CAI0D;AAC7D,GALD,CAMA,OAAMC,CAAN,EAAS;AACPC,IAAAA,OAAO,CAACC,KAAR,CAAc,wBAAd,EAAwCF,CAAC,CAACH,QAAF,GAAaG,CAAC,CAACH,QAAF,CAAWC,IAAxB,GAA+BE,CAAvE;AACA,WAAO,IAAP;AACD;AACF,CAXD;;AAaA,eAAeV,UAAf","sourcesContent":["import Cookie from \"js-cookie\"\n//npm install js-cookie\n\nconst apiHelpers = { }\n\n\n//added for authentication\napiHelpers.getCsrfConfig = () => {\n  return {\n    withCredential: true, //required for sep proj setup\n    headers: {\n      'X-CSRFToken': Cookie.get(\"csrftoken\")\n    }\n  }\n}\n\napiHelpers.tryCatchFetch = async (axiosCall) => {\n  try {\n    const response = await axiosCall()\n    // console.log(\"RESPONSE:\", response)\n    // console.log(\"RESPONSE DATA:\", response.data)\n    return response.data ? response.data : {message: \"success\"} // does not look like promise but auto converts to a promise due to async function behavior\n  }\n  catch(e) {\n    console.error(\"--tryCatchFetch ERROR:\", e.response ? e.response.data : e)\n    return null\n  }\n}\n\nexport default apiHelpers;"]},"metadata":{},"sourceType":"module"}